name: Update Database

concurrency:
  group: db
  cancel-in-progress: false

on:
  workflow_dispatch:
  schedule:
    - cron: "30 3 * * *"

jobs:
  update_db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Setup Rust
        run: rustup update

      - name: Build Scraper
        working-directory: scraper
        run: cargo build --all-targets --release

      - name: Run load_topdeck_tournaments
        working-directory: scraper
        run: cargo run --release --bin load_topdeck_tournaments
        env:
          ENTRIES_DB_URL: ${{ secrets.ATLAS_URI }}
          TOPDECK_GG_API_KEY: ${{ secrets.TOPDECK_GG_API_KEY }}

      - name: Run load_third_party_tournaments
        working-directory: scraper
        run: cargo run --release --bin load_third_party_tournaments
        env:
          ENTRIES_DB_URL: ${{ secrets.ATLAS_URI }}

      - name: Run scrape_commanders
        working-directory: scraper
        run: cargo run --release --bin scrape_commanders
        env:
          ENTRIES_DB_URL: ${{ secrets.ATLAS_URI }}
          MOXFIELD_API_KEY: ${{ secrets.MOXFIELD_API_KEY }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Setup pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Install Node Dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Build Scripts
        run: pnpm rebuild

      - name: Generate Application Database
        run: pnpm run generate:db
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          ENTRIES_DB_URL: ${{ secrets.ATLAS_URI }}

      - name: Setup Go
        uses: actions/setup-go@v5

      - name: Push Application Database
        run: go run etl.go --phases=push
        env:
          DO_SPACES_ENDPOINT: ${{ secrets.DO_SPACES_ENDPOINT }}
          DO_SPACES_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_ACCESS_KEY_ID }}
          DO_SPACES_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET_ACCESS_KEY }}

      - name: Deploy Application
        run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} --force-rebuild --wait
