/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Card {
  data: string;
  id: Generated<number>;
  name: string;
  oracleId: string;
  playRateLastYear: number | null;
}

export interface Commander {
  colorId: string;
  id: Generated<number>;
  name: string;
}

export interface DecklistItem {
  cardId: number;
  entryId: number;
}

export interface Entry {
  commanderId: number;
  decklist: string | null;
  draws: number;
  id: Generated<number>;
  lossesBracket: number;
  lossesSwiss: number;
  playerId: number;
  standing: number;
  tournamentId: number;
  winsBracket: number;
  winsSwiss: number;
}

export interface Player {
  id: Generated<number>;
  name: string;
  topdeckProfile: string | null;
}

export interface Tournament {
  bracketUrl: string | null;
  id: Generated<number>;
  name: string;
  size: number;
  swissRounds: number;
  TID: string;
  topCut: number;
  tournamentDate: string;
}

export interface DB {
  Card: Card;
  Commander: Commander;
  DecklistItem: DecklistItem;
  Entry: Entry;
  Player: Player;
  Tournament: Tournament;
}
